image:
  name: blueacornici/magento-services:v2-pipelines-7.4composer2
  username: $DOCKER_USER
  password: $DOCKER_PASS
definitions:
  caches:
    node: node_modules
    composer: .composer
  services:
    docker:
      memory: 3072
    mysql:
      image: blueacornici/magento-services:mysql
    redis:
      image: redis:latest
    ampq:
      image: rabbitmq:latest
pipelines:
  custom:
    auto-db-snapshot:
      - step:
          name: Database Snapshot
          script: [ source init, snapshot ]
          services: [ docker ]
    auto-provision:
      - step:
          name: Provision in AWS
          script: [ source init, provision ]
          services: [ docker ]
  branches:
    '{master,pipelines}':
      - step:
          name: "7.4composer2 & 2.4.3-ee"
          size: 2x
          script: [
              export AUTO_IMAGE_TYPE=7.4composer2,
              export AUTO_USE_EXAMPLE=2.4.3-ee,
              export AUTO_TESTS_ALWAYS_PASS=true,

              source init, build, best-practices, deploy, mftf, conclude

          ]
          services: [ docker, mysql, redis, ampq ] # docker required for creating images, rest required for integration
      - step:
          name: Destroy
          trigger: manual
          script: [ source init, destroy ]

